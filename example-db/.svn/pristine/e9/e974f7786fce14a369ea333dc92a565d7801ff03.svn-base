package bg.infosys.crc.admin.repository.custom.impl;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import bg.infosys.crc.admin.dto.PagingSorting;
import bg.infosys.crc.admin.entity.Provider;
import bg.infosys.crc.admin.entity.WebAppLabel;
import bg.infosys.crc.admin.repository.custom.GenericRepository;
import bg.infosys.crc.admin.repository.custom.WebAppLabelRepositoryCustom;
import bg.infosys.crc.admin.util.SortingUtil;

public class WebAppLabelRepositoryCustomImpl extends GenericRepository<Provider> implements WebAppLabelRepositoryCustom {

	@Override
	public List<WebAppLabel> findAllByFilter(String code, String languageCode, PagingSorting paginSorting) {
		CriteriaBuilder builder = criteriaBuilder();
		CriteriaQuery<WebAppLabel> criteria = builder.createQuery(WebAppLabel.class);
		Root<WebAppLabel> root = criteria.from(WebAppLabel.class);
		
		List<Predicate> predicates = new ArrayList<Predicate>();
		
		if (code != null) {			
			predicates.add(builder.like(root.get(WebAppLabel._code), "%" + code + "%"));
		}
		
		if (languageCode != null) {			
			predicates.add(builder.equal(root.get(WebAppLabel._languageCode), languageCode));
		}
		
		SortingUtil.<WebAppLabel>sort(criteria, builder, root.get(paginSorting.getSortBy()), paginSorting.getSortDirection());
		criteria.where(builder.and(predicates.toArray(new Predicate[predicates.size()])));
		
		return createQuery(criteria).setFirstResult(paginSorting.getPageSize() * paginSorting.getPageNumber())
									.setMaxResults(paginSorting.getPageSize())
									.getResultList();
	}

	@Override
	public long countAllByFilter(String code, String languageCode) {
		CriteriaBuilder builder = criteriaBuilder();
		CriteriaQuery<Long> criteria = builder.createQuery(Long.class);
		Root<WebAppLabel> root = criteria.from(WebAppLabel.class);
		
		criteria.select(builder.countDistinct(root));
		
		List<Predicate> predicates = new ArrayList<Predicate>();
		
		if (code != null) {			
			predicates.add(builder.like(root.get(WebAppLabel._code), "%" + code + "%"));
		}
		
		if (languageCode != null) {			
			predicates.add(builder.equal(root.get(WebAppLabel._languageCode), languageCode));
		}
		
		criteria.where(builder.and(predicates.toArray(new Predicate[predicates.size()])));
		
		return createQuery(criteria).getSingleResult();
	}


}
