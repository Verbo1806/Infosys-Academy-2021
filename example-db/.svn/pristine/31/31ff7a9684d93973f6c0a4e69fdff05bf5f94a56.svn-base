package bg.infosys.crc.admin.repository.security.custom.impl;

import javax.persistence.NoResultException;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import bg.infosys.common.ws.security.db.dao.AbstractUserDAO;
import bg.infosys.crc.admin.entity.security.Authority;
import bg.infosys.crc.admin.entity.security.User;
import bg.infosys.crc.admin.repository.security.custom.UserRepositoryCustom;

public class UserRepositoryCustomImpl extends AbstractUserDAO<User, Authority> implements UserRepositoryCustom {

	@Override
	public User findByUsername(String username, Integer userId) {
		CriteriaBuilder cb = criteriaBuilder();
		CriteriaQuery<User> crit = cb.createQuery(User.class);
		Root<User> root	= crit.from(User.class);
		
		crit.select(root);
		
		if (userId != null) {
			crit.where(
				cb.equal(root.get(User._username), username),
				cb.notEqual(root.get(_id), userId));
		} else {
			crit.where(cb.equal(root.get(User._username), username));
		}
		
		try {
			return createQuery(crit).getSingleResult();
		} catch (NoResultException e) {
			return null;
		}
	}
}
