package bg.infosys.crc.admin.service.mapper;

import org.springframework.stereotype.Service;

import bg.infosys.crc.admin.dto.UserDTO;
import bg.infosys.crc.admin.dto.UserPagingDTO;
import bg.infosys.crc.admin.entity.security.User;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UserMapper implements IModelMapper<UserDTO, User> {
	private final AuthorityMapper authorityMapper;

	@Override
	public UserDTO toDto(User entity) {
		return UserDTO.builder()
						  .id(entity.getId())
						  .username(entity.getUsername())
						  .password(entity.getPassword())
						  .fullName(entity.getFullName())
						  .enabled(entity.getEnabled())
						  .authority(entity.getGrantedAuthorities() != null && entity.getGrantedAuthorities().size() > 0
						  		? authorityMapper.toDto(entity.getGrantedAuthorities().get(0)) : null)
						  .build();
	}

	@Override
	public User toEntity(UserDTO dto) {
		User user = new User();
		user.setId(dto.getId());
		user.setUsername(dto.getUsername());
		user.setPassword(dto.getPassword());
		user.setFullName(dto.getFullName());
		user.setEnabled(dto.getEnabled());
		user.getGrantedAuthorities().clear();
		user.getGrantedAuthorities().add(authorityMapper.toEntity(dto.getAuthority()));
		
		return user;
	}
	
	public UserPagingDTO toPagingDto(User entity) {
		return UserPagingDTO.builder()
						  .id(entity.getId())
						  .username(entity.getUsername())
						  .password(entity.getPassword())
						  .fullName(entity.getFullName())
						  .enabled(entity.getEnabled())
						  .authority(entity.getGrantedAuthorities() != null && entity.getGrantedAuthorities().size() > 0
						  		? entity.getGrantedAuthorities().get(0).getName() : null)
						  .build();
	}

}
