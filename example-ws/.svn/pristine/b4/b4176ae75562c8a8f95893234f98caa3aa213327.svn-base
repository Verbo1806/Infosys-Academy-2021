package bg.infosys.crc.admin.service;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.stereotype.Service;

import bg.infosys.crc.admin.dto.LitePage;
import bg.infosys.crc.admin.dto.PagingSorting;
import bg.infosys.crc.admin.dto.reports.Report1DTO;
import bg.infosys.crc.admin.dto.reports.filter.Report1FilterDTO;
import bg.infosys.crc.admin.entity.config.Speed;
import bg.infosys.crc.admin.repository.Speed2Repository;
import bg.infosys.crc.admin.repository.SpeedRepository;
import bg.infosys.crc.admin.repository.TestRepository;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class StatisticsService {
	private final TestRepository testRepository;
	private final SpeedRepository speedRepository;
	
	private final Speed2Repository speed2Repository;
	
	@Transactional
	public LitePage<Report1DTO> findReport1ByFilter(Report1FilterDTO filter, PagingSorting pagingSorting) {
		Optional<Speed> downloadSpeed = null;
		if (filter.getDownloadSpeed() != null) {
			downloadSpeed = speedRepository.findById(filter.getDownloadSpeed());
		}
		List<Report1DTO> results = testRepository.findReport1ByFilter(filter, downloadSpeed, pagingSorting);
		
		return LitePage.<Report1DTO>builder()
					   .content(results)
					   .pageNumber(pagingSorting.getPageNumber())
					   .pageSize(pagingSorting.getPageSize())
					   .totalElements(testRepository.countReport1ByFilter(filter, downloadSpeed))
					   .build();
	}
	
	public List<bg.infosys.crc.admin.entity.Speed2> test() {
		return speed2Repository.findAll();
	}
}
